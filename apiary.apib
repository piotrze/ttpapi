FORMAT: 1A
HOST: https://api.s.theorytestpro.co.uk/

# ttpapp API
ttpapp API is service make drive tests.

We are going to use new url for our api:
https://api.theorytestpro.co.uk/api/app/{action}

and for staging:
https://api.s.theorytestpro.co.uk/api/app/{action}

I'm going to keep old resources working as well, so http://theorytestpro.co.uk/api/{action} will be working for old app version.


## Authentication
We are using http basic auth

# ttpapp API Root [/api/app/]
API entry point


# Group User
Current user and his access level

## User [/api/app/user]
A single user object with all its details

_THIS CALL IS USED BY THE iOS APPLICATION_
------------------------------------------

+ Model (application/json)

    User data, contains student details and info about partner
    + Body
    
            {
                "user": {
                    "id": 442064,
                    "email": "adi-student@example.com",
                    "name": "adi-student@example.com",
                    "student": {
                        "id": 447457,
                        "company_name": null,
                        "prefers_hq_video": true,
                        "speech_enabled": false,
                        "translation_enabled": true,
                        "translate_to": "pl",
                        "chosen_driving_instructor": true,
                        "vehicle_category_id": 1,
                        "confirmed_live": false,
                        "test_booked": null,
                        "test_booked_on": null,
                        "age_range": "",
                        "nationality": null,
                        "selected_for_ads": false,
                        "driving_school": {
                            "id": 447455,
                            "company_name": "adi-pete@example.com",
                            "instructor_name": "Sam",
                            "website_address": "red-adi.com",
                            "number_of_approved_driving_instructors": null,
                            "number_of_students_per_year": null,
                            "approved": false,
                            "brand_image": "/brand_images/original/missing.png",
                            "partner_code": "edfb85",
                            "address_1": "Not provided",
                            "address_2": null,
                            "town": "Not provided",
                            "county": null,
                            "postcode": "A1 1AA",
                            "phone": "Not provided",
                            "membership_number_pattern": null,
                            "membership_number_label": "Membership card barcode number",
                            "membership_number_explanation": null,
                            "confirmed_live": false,
                            "subdomain": "adi497312",
                            "franchise_owner": false
                        }
                    }
                }
            }
            
### Retrieve a User[GET]
+ Request

    + Headers

            Accept: application/json

+ Response 200 (application/json)
    
    [User][]
    
## User access [/api/app/user/access]
Info about access level.  

Levels:

- `full_access`
- `no_user`
- `trial`

_THIS CALL IS USED BY THE iOS APPLICATION_
------------------------------------------

### Retrieve a User access[GET]
+ Request

    + Headers

            Accept: application/json

+ Response 200 (application/json)
    
            {
                "access": "full_access"
            }


# Group Quiz
Quiz is an attempt by a user at list of questions.


## Create many Quizzes [/api/app/quizzes/create_many]
### Bulk quiz creation[POST]
Create many quizzes 

_THIS CALL IS USED BY THE iOS APPLICATION_
------------------------------------------

+ Request

    + Headers

            Accept: application/json
            
    + Body
    
            {
                "quizzes": [{
                    "quiz_specification_id":70, 
                    "quiz_questions": [{
                        "question_id":3000, 
                        "answer_a":"t"
                    }], 
                    "created_at":"2013-03-28 13:39:31"
                }]
            } 
       

+ Response 200 (application/json)
    
    + Body
    
            {"quizzes":[{"id":10279183,"student_id":609477,"quiz_specification_id":70,"created_at":"2013-03-28T13:39:31+00:00","updated_at":"2013-03-28T13:39:31+00:00","summary":null,"review":null,"complete":true,"reveal_answers":null,"case_study_id":null,"cached_score":null,"topic_id":null,"quiz_questions":[{"id":212921789,"quiz_id":10279183,"question_id":3000,"review":null,"position":1,"correct":true,"answer_a":"t","answer_b":null,"answer_c":null,"answer_d":null,"answer_e":null,"answer_f":null}]}]}





## Read Quiz Collection [/api/app/quizzes{?by_time}]
### List all Quizzes [GET]

_THIS CALL IS USED BY THE iOS APPLICATION_
------------------------------------------

+ Parameters
    + by_time (optional, hash) ... ex.: by_time: {from: '2013-03-01'}.

+ Request

    + Headers

            Accept: application/json


+ Response 200 (application/json)

    + Body
        
            {"quizzes":[{"id":10279183,"student_id":609477,"quiz_specification_id":70,"created_at":"2013-03-28T13:39:31+00:00","updated_at":"2013-03-28T13:39:31+00:00","summary":null,"review":null,"complete":true,"reveal_answers":null,"case_study_id":null,"cached_score":null,"topic_id":null,"quiz_questions":[{"id":212921789,"quiz_id":10279183,"question_id":3000,"review":null,"position":1,"correct":true,"answer_a":"t","answer_b":null,"answer_c":null,"answer_d":null,"answer_e":null,"answer_f":null}]}]}



# Group Question

Questions available in for app


## Question [/api/app/questions/{id}]
A single Question object with all its details

*THIS IS NOT USED BY THE iOS APPLICATION*

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Question.
    
+ Model (application/json)

    JSON representation of Gist Resource. In addition to representing its state in the JSON form it offers affordances in the form of the HTTP Link header and HAL links.
    + Body

            {
                "question": {
                    "id":2567,
                    "topic_name":"Accidents",
                    "stem":"You have stopped at an incident to give help. Which THREE things should you do?",
                    "stem_image_path":"quiz/",
                    "mark_answer_text":"Mark three answers",
                    "answer":"ABE",
                    "option_a":"Keep injured people warm and comfortable",
                    "option_b":"Keep injured people calm by talking to them reassuringly",
                    "option_c":"Keep injured people on the move by walking them around",
                    "option_d":"Give injured people a warm drink",
                    "option_e":"Make sure that injured people are not left alone",
                    "option_f":null,
                    "image_a_path":"quiz/",
                    "image_b_path":"quiz/",
                    "image_c_path":"quiz/",
                    "image_d_path":"quiz/",
                    "image_e_path":"quiz/",
                    "image_f_path":"quiz/",
                    "northern_ireland_exempt":null,
                    "free":true,
                    "explanation":"There are a number of things you can do to help, even without expert training. Be aware of further danger and fire, make sure the area is safe. People may be in shock. Don\u2019t give them anything to eat or drink. Keep them warm and comfortable and reassure them. Don\u2019t move injured people unless there is a risk of further danger.",
                    "band_number":null,
                    "number_of_answers":3
                }
            }

### Retrieve a Question[GET]
+ Request

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    [Question][]

## Question Collection [/api/app/questions{?vehicle_category}]
### List all Questions [GET]

_THIS CALL IS USED BY THE iOS APPLICATION_
------------------------------------------

+ Parameters
    + vehicle_category (optional, number) ... ex.: vehicle_category: 1.

+ Request

    + Headers

            Accept: application/json

+ Response 200 (application/json)

    + Body
    
            [
                {
                "question": {
                    "id":2567,
                    "topic_name":"Accidents",
                    "stem":"You have stopped at an incident to give help. Which THREE things should you do?",
                    "stem_image_path":"quiz/",
                    "mark_answer_text":"Mark three answers",
                    "answer":"ABE",
                    "option_a":"Keep injured people warm and comfortable",
                    "option_b":"Keep injured people calm by talking to them reassuringly",
                    "option_c":"Keep injured people on the move by walking them around",
                    "option_d":"Give injured people a warm drink",
                    "option_e":"Make sure that injured people are not left alone",
                    "option_f":null,
                    "image_a_path":"quiz/",
                    "image_b_path":"quiz/",
                    "image_c_path":"quiz/",
                    "image_d_path":"quiz/",
                    "image_e_path":"quiz/",
                    "image_f_path":"quiz/",
                    "northern_ireland_exempt":null,
                    "free":true,
                    "explanation":"There are a number of things you can do to help, even without expert training. Be aware of further danger and fire, make sure the area is safe. People may be in shock. Don\u2019t give them anything to eat or drink. Keep them warm and comfortable and reassure them. Don\u2019t move injured people unless there is a risk of further danger.",
                    "band_number":null,
                    "number_of_answers":3
                }
            }
            ]

# Group QuizSpecification
Quiz types. For now you will probably want to use only:
* Practice everything
* Practive topic

## QuizSpecification [/api/app/quiz_specifications/{id}]
A single QuizSpecification object with information about quiz

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the QuizSpecification.
    
+ Model (application/json)
    + Body

            {
                "id":2567,
                "name": "Free Full Car Test"
                "number_of_questions": 50
                "time_limit": 57
                "vehicle_category": "Car"
                "practice": false
                "free": true
            }


### Retrieve a QuizSpecification[GET]
+ Request

    + Headers

            Accept: application/json

+ Response 200 (application/json)
    
    [QuizSpecification][]

## QuizSpecification Collection [/api/app/quiz_specifications]
### List all QuizSpecifications [GET]
+ Request

    + Headers

            Accept: application/json

+ Response 200 (application/json)
        
    [QuizSpecification][]
 

# Group Topic
Topic is a category for questions.


## Topics Collection [/api/app/topics{?vehicle_category}]
### List all Topics [GET]

_THIS CALL IS USED BY THE iOS APPLICATION_
------------------------------------------

+ Parameters
    + vehicle_category (optional, number) ... ex.: vehicle_category: 1

+ Request

    + Headers

            Accept: application/json

+ Response 200 (application/json)
        
    + Body
    
            {"topics":[{"id":1,"name":"Accidents","question_count":79,"question_ids":[2541,2542,2543,2544,2545,2546,2547,2548,2549,2550,2551,2552,2553,2554,2555,2556,2557,2558,2559,2560,2561,2562,2563,2564,2565,2566,2567,2568,2569,2570,2571,2572,2573,2574,2575,2576,2577,2578,2579,2580,2581,2582,2583,2584,2585,2586,2587,2588,2589,2590,2591,2592,2593,2594,2595,2596,2597,2598,2599,2600,2601,2602,2603,2604,2605,2606,2607,2608,2609,2610,2611,2612,2613,2614,2615,2616,2617,2618,2619],"vehicle_category_id":1},{"id":2,"name":"Alertness","question_count":37,"question_ids":[2647,2648,2649,2650,2651,2652,2653,2654,2655,2656,2657,2658,2659,2660,2661,2662,2663,2664,2665,2666,2667,2668,2669,2670,2671,2672,2673,2674,2675,2676,2677,2678,2679,2680,2681,2682,2683],"vehicle_category_id":1},{"id":3,"name":"Attitude","question_count":50,"question_ids":[2685,2686,2687,2688,2689,2690,2697,2698,2699,2700,2701,2702,2703,2704,2705,2706,2707,2708,2709,2710,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,2721,2722,2723,2724,2725,2726,2727,2728,2729,2730,2731,2732,2733,2734,2735,2736,2737,2738,2739,2740],"vehicle_category_id":1},{"id":4,"name":"Documents","question_count":44,"question_ids":[2764,2765,2766,2767,2768,2769,2772,2773,2774,2775,2776,2777,2778,2779,2781,2782,2783,2784,2785,2786,2787,2788,2789,2790,2791,2792,2793,2794,2795,2796,2797,2798,2799,2800,2801,2802,2803,2804,2805,2806,2807,2808,2809,2810],"vehicle_category_id":1},{"id":5,"name":"Hazard Awareness","question_count":96,"question_ids":[2829,2830,2831,2832,2833,2834,2835,2836,2837,2838,2839,2840,2841,2842,2843,2844,2845,2846,2847,2848,2849,2850,2851,2852,2853,2854,2855,2856,2857,2858,2859,2860,2861,2862,2863,2864,2865,2866,2867,2868,2869,2870,2871,2872,2873,2874,2875,2876,2877,2878,2879,2880,2881,2882,2883,2884,2885,2886,2887,2888,2889,2890,2891,2892,2893,2894,2895,2896,2897,2898,2899,2900,2901,2902,2903,2904,2905,2906,2907,2908,2909,2910,2911,2912,2913,2914,2915,2916,2917,2918,2919,2920,2921,2922,2923,2924],"vehicle_category_id":1},{"id":6,"name":"Motorway Rules","question_count":67,"question_ids":[2934,2935,2936,2937,2938,2939,2940,2941,2942,2943,2944,2945,2946,2947,2948,2949,2950,2951,2952,2953,2954,2955,2956,2957,2958,2959,2960,2961,2962,2963,2964,2965,2966,2967,2968,2969,2970,2971,2972,2973,2974,2975,2976,2977,2978,2979,2980,2981,2982,2983,2984,2985,2986,2987,2988,2989,2990,2991,2992,2993,2994,2995,2996,2997,2998,2999,3000],"vehicle_category_id":1},{"id":7,"name":"Other Types of Vehicle","question_count":27,"question_ids":[3003,3004,3005,3006,3007,3008,3009,3010,3011,3012,3013,3014,3015,3016,3017,3018,3019,3020,3021,3022,3023,3024,3025,3026,3027,3028,3029],"vehicle_category_id":1},{"id":8,"name":"Road and Traffic Signs","question_count":156,"question_ids":[3039,3040,3041,3042,3043,3044,3045,3046,3047,3048,3049,3050,3051,3052,3053,3054,3055,3056,3057,3058,3059,3060,3061,3062,3063,3064,3065,3066,3067,3068,3069,3070,3071,3072,3073,3074,3075,3076,3077,3078,3079,3080,3081,3082,3083,3084,3085,3086,3087,3088,3089,3090,3091,3092,3093,3094,3095,3096,3097,3098,3099,3100,3101,3102,3103,3104,3105,3106,3107,3108,3109,3110,3111,3112,3113,3114,3115,3116,3117,3118,3119,3120,3121,3122,3123,3124,3125,3126,3127,3128,3129,3130,3131,3132,3133,3134,3135,3136,3137,3138,3139,3140,3141,3142,3143,3144,3145,3146,3147,3148,3149,3150,3151,3152,3153,3154,3155,3156,3157,3158,3159,3160,3161,3162,3163,3164,3165,3166,3167,3168,3169,3170,3171,3172,3173,3174,3175,3176,3177,3178,3179,3180,3181,3182,3183,3184,3185,3186,3187,3188,3189,3190,3191,3192,3193,3194],"vehicle_category_id":1},{"id":9,"name":"Rules of the Road","question_count":75,"question_ids":[3208,3209,3210,3211,3212,3213,3214,3215,3216,3217,3218,3219,3220,3221,3222,3223,3224,3225,3226,3227,3228,3229,3230,3231,3232,3233,3234,3235,3236,3237,3238,3239,3240,3241,3242,3243,3244,3245,3246,3247,3248,3249,3250,3251,3252,3253,3254,3255,3256,3257,3258,3259,3260,3261,3262,3263,3264,3265,3266,3267,3268,3269,3270,3271,3272,3273,3274,3275,3276,3277,3278,3279,3280,3281,3282],"vehicle_category_id":1},{"id":10,"name":"Safety and Your Vehicle/Motorcycle","question_count":112,"question_ids":[3349,3350,3351,3352,3353,3354,3355,3356,3357,3358,3359,3360,3361,3362,3363,3364,3365,3366,3367,3368,3369,3370,3371,3372,3373,3374,3375,3376,3377,3378,3379,3380,3381,3382,3383,3384,3385,3386,3387,3388,3389,3390,3391,3392,3393,3394,3395,3396,3397,3398,3399,3400,3401,3402,3403,3404,3405,3406,3407,3408,3409,3410,3411,3412,3413,3414,3415,3416,3417,3418,3419,3420,3421,3422,3423,3424,3425,3426,3427,3428,3429,3430,3431,3432,3433,3434,3435,3436,3437,3438,3439,3440,3441,3442,3443,3444,3445,3446,3447,3448,3449,3450,3451,3452,3453,3454,3455,3456,3457,3458,3459,3460],"vehicle_category_id":1},{"id":11,"name":"Safety Margins","question_count":59,"question_ids":[3461,3462,3463,3464,3465,3466,3467,3500,3501,3502,3503,3504,3505,3506,3507,3508,3509,3510,3511,3512,3513,3514,3515,3516,3517,3518,3519,3520,3521,3522,3523,3524,3525,3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,3538,3539,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3551],"vehicle_category_id":1},{"id":12,"name":"Vehicle/Motorcycle Handling","question_count":62,"question_ids":[3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,3643,3644,3645,3646,3647,3648,3649,3650,3651,3652,3653],"vehicle_category_id":1},{"id":13,"name":"Vehicle/Motorcycle Loading","question_count":15,"question_ids":[3686,3687,3688,3689,3690,3691,3692,3693,3694,3695,3696,3697,3698,3699,3700],"vehicle_category_id":1},{"id":14,"name":"Vulnerable Road Users","question_count":81,"question_ids":[3715,3716,3717,3718,3719,3720,3721,3722,3723,3724,3725,3726,3727,3728,3729,3730,3731,3732,3733,3734,3735,3736,3737,3738,3739,3740,3741,3742,3743,3744,3745,3746,3747,3748,3749,3750,3751,3752,3753,3754,3755,3756,3757,3758,3759,3760,3761,3762,3763,3764,3765,3766,3767,3768,3769,3770,3771,3772,3773,3774,3775,3776,3777,3778,3779,3780,3781,3782,3783,3784,3785,3786,3787,3788,3789,3790,3791,3792,3793,3794,3795],"vehicle_category_id":1}]



  
# Group Hazard perception tests
Resources to take hazard perception video tests

## HazardPerceptionTest Collection [/api/user/hpt_tests]
### List all HazardPerceptionTests [GET]

_THIS CALL IS USED BY THE iOS APPLICATION_
------------------------------------------

+ Request

    + Headers

            Accept: application/json

+ Response 200 (application/json)
    + Body
    
            {
                "hpt_tests": 
                [
                    {
                        "id": 2675680,
                        "student_id": 447457,
                        "video_id": 1,
                        "created_at": "2013-03-22T11:30:31+00:00",
                        "disqualified": "false",
                        "score": 3,
                        "score_out_of": 5
                    },
                    {
                        "id": 2675682,
                        "student_id": 447457,
                        "video_id": 1,
                        "created_at": "2013-03-29T16:02:32+00:00",
                        "disqualified": "false",
                        "score": 3,
                        "score_out_of": 5
                    }
                ]
            }

## Create many HazardPerceptionTests [/api/user/hpt_tests/create_many]
### Bulk hazard perception test attempt creation[POST]
Create many hazard perception test attemtps - record a user's attempt.

_THIS CALL IS USED BY THE iOS APPLICATION_
------------------------------------------


+ Request

    + Headers

            Accept: application/json
            
    
    + Body
    
            {
                "hpt_tests":
                    [
                        {
                            "video_id": 3, 
                            "score": 7, 
                            "score_out_of": 8, 
                            "created_at": "2013-03-04 12:45:12", 
                            "disqualified": false 
                        } 
                    ]
                }
            }

+ Response 200 (application/json)
    + Body

            {
                "hpt_tests": 
                [
                    {
                        "id": 2675680,
                        "student_id": 447457,
                        "video_id": 3,
                        "created_at": "2013-03-04T12:45:12+00:00",
                        "disqualified": "false",
                        "score": 7,
                        "score_out_of": 8
                    }
                ]
            }





# Group DEPRECATED DO NOT USE
Available vehicle categories

## VehicleCategory [/api/app/vehicle_categories/{id}]
Vehicle category, includes list of associated topis and quiz specification.

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Quiz
    
+ Model (application/json)
    + Body
    
            {
                "vehicle_category": {
                    "id":1,
                    "name": "Car Test",
                    "short_name": "Car", 
                    "pass_mark": 0.86
                    "quiz_specification_ids": [1,2,3,4,5,6,7,8,9,10,11,12,13,14],
                    "topic_ids": [1,3,5,9,11,21,22,24,26,28,30,31,32,33,34,47,48,49,50,70,71,72,85,86]
                }
            }


### Retrieve a VehicleCategory[GET]
+ Request

    + Headers

            Accept: application/json

+ Response 200 (application/json)
    
    [VehicleCategory][]

## VehicleCategory Collection [/api/app/vehicle_categories]
### List all Topics [GET]
+ Request

    + Headers

            Accept: application/json

+ Response 200 (application/json)
        
    [VehicleCategory][]

## Topic [/api/app/topics/{id}]
A single Topic object. It includes topic questions.

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Quiz
    
+ Model (application/json)
    + Body
    
            {
                "id":9362889,
                "name": "Documents",
                "question_ids": [121,321,323]
            }


### Retrieve a Topic[GET]
+ Request

    + Headers

            Accept: application/json

+ Response 200 (application/json)
    
    [Topic][]

## Quiz [/api/app/quizzes/{id}]
Read a single Quiz object

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Quiz
    
+ Model (application/json)
    + Body
    
            {
                "id":9362889,
                "student_id":538262,
                "summary":null,
                "review":null,
                "complete":null,
                "reveal_answers":null,
                "case_study_id":26,
                "score":0,
                "current_position":1,
                "seconds_remaining":3415,
                "next_question":true,
                "previous_question":false,
                "topic_id":null,
                "current_question_id":179268199,
                "quiz_specification_id":50
                "quiz_questions": {
                    [{
                        "id": 136505995,
                        "quiz_id": 7048436,
                        "question_id": 2541,
                        "review": null,
                        "position": 1,
                        "correct": true,
                        "answer_a": "t",
                        "answer_b": "",
                        "answer_c": "",
                        "answer_d": "",
                        "answer_e": null,
                        "answer_f": null
                    }]
                }
            }


### Read a Quiz[GET]
+ Request

    + Headers

            Accept: application/json

+ Response 200 (application/json)
    
    [Quiz][]

## Create Quiz [/api/app/quizzes]
### Create a Quiz[POST]
Creates full quiz with answers(quiz questions).

+ Request

    + Headers

            Accept: application/json
            
    + Body
    
            {
                "quiz": {
                    "quiz_specification_id":70, 
                    "quiz_questions": [{
                        "question_id":3000, "answer_a":"t"
                    }], 
                    "created_at":"2013-03-28 13:39:31"
                }
            }
       

+ Response 200 (application/json)
    
    [Quiz][]

